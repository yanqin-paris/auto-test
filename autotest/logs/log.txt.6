2017-11-09 16:28:05,681 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [{'id': 883040, 'delivery_date': 1510416000, 'return_date': 1510934400, 'split_order_id': 880995, 'status': 17, 'bag_num': 0, 'product': [{'product_id': 9879, 'name': '时尚提花连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/b/a/ba3bb16c3514d272aa604286d090f45c.jpg', 'brand_name': 'JUNIOR SELECT', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '中码S', 'product_dots': 2, 'status': 1, 'type': 2, 'id': 435493, 'product_type_id': 1, 'specification_key': '15', 'product_limit_tag': '', 'product_spu': 'DC011W', 'sale_price': 19900, 'base_discount': 100, 'enabled': 1, 'market_price': 39900, 'rental_price': 16000, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0}, {'product_id': 9873, 'name': '热带风印花连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/9/8/985c32b8b788388603e106432e6fbaa9.jpg', 'brand_name': 'JUNIOR SELECT', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '中码L', 'product_dots': 2, 'status': 1, 'type': 2, 'id': 435494, 'product_type_id': 1, 'specification_key': '8', 'product_limit_tag': '', 'product_spu': 'DC010M', 'sale_price': 18900, 'base_discount': 100, 'enabled': 1, 'market_price': 37900, 'rental_price': 16000, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0}], 'is_ove rdue': 0, 'remaining_day': 9}, {'id': 883041, 'delivery_date': 1511971200, 'return_date': 1512230400, 'split_order_id': 880996, 'status': 13, 'bag_num': 0, 'product': [{'product_id': 6161, 'name': '复古刺绣美背小礼服', 'image_url': 'http://static-t.msparis.com/image/product/A/O/AO087M-1.jpg', 'brand_name': 'ALICE+OLIVIA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码4', 'product_dots': 3, 'status': 2, 'type': 2, 'id': 435495, 'product_type_id': 2, 'specification_key': '65', 'product_limit_tag': '', 'product_spu': 'ao087m', 'sale_price': 132000, 'base_discount': 100, 'enabled': 1, 'market_price': 440000, 'rental_price': 28000, 'renewed_rent': 1, 'can_buy': 1, 'in_hand': 1}], 'is_ove rdue': 0, 'remaining_day': 24}, {'id': 883043, 'delivery_date': 1512748800, 'return_date': 1513094400, 'split_order_id': 880998, 'status': 7, 'bag_num': 0, 'product': [{'product_id': 7530, 'name': '轻奢淑女蕾丝连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'brand_name': 'BADGLEY MISCHKA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码M', 'product_dots': 3, 'status': 0, 'type': 2, 'id': 435497, 'product_type_id': 2, 'specification_key': '50', 'product_limit_tag': '', 'product_spu': 'BM054B', 'sale_price': 205800, 'base_discount': 100, 'enabled': 1, 'market_price': 686000, 'rental_price': 30000, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0}], 'is_ove rdue': 0, 'remaining_day': 34}, {'id': 883044, 'delivery_date': 1513239362, 'return_date': 1513498562, 'split_order_id': 880999, 'status': 13, 'bag_num': 0, 'product': [{'product_id': 7530, 'name': '轻奢淑女蕾丝连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'brand_name': 'BADGLEY MISCHKA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码M', 'product_dots': 3, 'status': 2, 'type': 4, 'id': 435498, 'product_type_id': 2, 'specification_key': '50', 'product_limit_tag': '', 'product_spu': 'BM054B', 'sale_price': 205800, 'base_discount': 100, 'enabled': 1, 'market_price': 686000, 'rental_price': 30000, 'renewed_rent': 1, 'can_buy': 0, 'in_hand': 1}], 'is_ove rdue': 0, 'remaining_day': 39}, {'id': 883046, 'delivery_date': 1513958400, 'return_date': 1514217600, 'split_order_id': 881001, 'status': 13, 'bag_num': 0, 'product': [{'product_id': 6161, 'name': '复古刺绣美背小礼服', 'image_url': 'http://static-t.msparis.com/image/product/A/O/AO087M-1.jpg', 'brand_name': 'ALICE+OLIVIA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码4', 'product_dots': 3, 'status': 2, 'type': 2, 'id': 435500, 'product_type_id': 2, 'specification_key': '65', 'product_limit_tag': '', 'product_spu': 'ao087m', 'sale_price': 132000, 'base_discount': 100, 'enabled': 1, 'market_price': 440000, 'rental_price': 28000, 'renewed_rent': 1, 'can_buy': 1, 'in_hand': 1}], 'is_ove rdue': 0, 'remaining_day': 47}], 'total': 5}}
2017-11-09 16:28:06,656 TestRequest.py[line: 179] INFO: 用户模块我的衣橱 V12-43-419
2017-11-09 16:28:06,656 TestRequest.py[line: 180] INFO: 测试不通过
2017-11-09 16:28:06,656 TestRequest.py[line: 181] INFO: 返回的消息为：{'status': 'ok', 'data': {'rows': [{'id': 883040, 'delivery_date': 1510416000, 'return_date': 1510934400, 'split_order_id': 880995, 'status': 17, 'bag_num': 0, 'product': [{'product_id': 9879, 'name': '时尚提花连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/b/a/ba3bb16c3514d272aa604286d090f45c.jpg', 'brand_name': 'JUNIOR SELECT', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '中码S', 'product_dots': 2, 'status': 1, 'type': 2, 'id': 435493, 'product_type_id': 1, 'specification_key': '15', 'product_limit_tag': '', 'product_spu': 'DC011W', 'sale_price': 19900, 'base_discount': 100, 'enabled': 1, 'market_price': 39900, 'rental_price': 16000, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0}, {'product_id': 9873, 'name': '热带风印花连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/9/8/985c32b8b788388603e106432e6fbaa9.jpg', 'brand_name': 'JUNIOR SELECT', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '中码L', 'product_dots': 2, 'status': 1, 'type': 2, 'id': 435494, 'product_type_id': 1, 'specification_key': '8', 'product_limit_tag': '', 'product_spu': 'DC010M', 'sale_price': 18900, 'base_discount': 100, 'enabled': 1, 'market_price': 37900, 'rental_price': 16000, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0}], 'is_ove rdue': 0, 'remaining_day': 9}, {'id': 883041, 'delivery_date': 1511971200, 'return_date': 1512230400, 'split_order_id': 880996, 'status': 13, 'bag_num': 0, 'product': [{'product_id': 6161, 'name': '复古刺绣美背小礼服', 'image_url': 'http://static-t.msparis.com/image/product/A/O/AO087M-1.jpg', 'brand_name': 'ALICE+OLIVIA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码4', 'product_dots': 3, 'status': 2, 'type': 2, 'id': 435495, 'product_type_id': 2, 'specification_key': '65', 'product_limit_tag': '', 'product_spu': 'ao087m', 'sale_price': 132000, 'base_discount': 100, 'enabled': 1, 'market_price': 440000, 'rental_price': 28000, 'renewed_rent': 1, 'can_buy': 1, 'in_hand': 1}], 'is_ove rdue': 0, 'remaining_day': 24}, {'id': 883043, 'delivery_date': 1512748800, 'return_date': 1513094400, 'split_order_id': 880998, 'status': 7, 'bag_num': 0, 'product': [{'product_id': 7530, 'name': '轻奢淑女蕾丝连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'brand_name': 'BADGLEY MISCHKA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码M', 'product_dots': 3, 'status': 0, 'type': 2, 'id': 435497, 'product_type_id': 2, 'specification_key': '50', 'product_limit_tag': '', 'product_spu': 'BM054B', 'sale_price': 205800, 'base_discount': 100, 'enabled': 1, 'market_price': 686000, 'rental_price': 30000, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0}], 'is_ove rdue': 0, 'remaining_day': 34}, {'id': 883044, 'delivery_date': 1513239362, 'return_date': 1513498562, 'split_order_id': 880999, 'status': 13, 'bag_num': 0, 'product': [{'product_id': 7530, 'name': '轻奢淑女蕾丝连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'brand_name': 'BADGLEY MISCHKA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码M', 'product_dots': 3, 'status': 2, 'type': 4, 'id': 435498, 'product_type_id': 2, 'specification_key': '50', 'product_limit_tag': '', 'product_spu': 'BM054B', 'sale_price': 205800, 'base_discount': 100, 'enabled': 1, 'market_price': 686000, 'rental_price': 30000, 'renewed_rent': 1, 'can_buy': 0, 'in_hand': 1}], 'is_ove rdue': 0, 'remaining_day': 39}, {'id': 883046, 'delivery_date': 1513958400, 'return_date': 1514217600, 'split_order_id': 881001, 'status': 13, 'bag_num': 0, 'product': [{'product_id': 6161, 'name': '复古刺绣美背小礼服', 'image_url': 'http://static-t.msparis.com/image/product/A/O/AO087M-1.jpg', 'brand_name': 'ALICE+OLIVIA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码4', 'product_dots': 3, 'status': 2, 'type': 2, 'id': 435500, 'product_type_id': 2, 'specification_key': '65', 'product_limit_tag': '', 'product_spu': 'ao087m', 'sale_price': 132000, 'base_discount': 100, 'enabled': 1, 'market_price': 440000, 'rental_price': 28000, 'renewed_rent': 1, 'can_buy': 1, 'in_hand': 1}], 'is_ove rdue': 0, 'remaining_day': 47}], 'total': 5}}
2017-11-09 16:28:06,812 TestRequest.py[line: 123] INFO: 用户模块我的衣橱 V12-43-420
2017-11-09 16:28:06,812 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:06,812 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:07,019 TestRequest.py[line: 166] INFO: 用户模块我的衣橱曾经拥有 V12-44-428
2017-11-09 16:28:07,019 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:07,020 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [{'dots': 3, 'type_id': 2, 'limit_tag': '', 'sale_price': 205800, 'enabled': 1, 'product_master_id': 7530, 'rental_limit_days': '4', 'mode_id': 1, 'rental_price': 30000, 'market_price': 686000, 'id': 7530, 'cover_image': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'brand': 'BADGLEY MISCHKA', 'show_specifications': 'M L XL', 'base_discount': 100, 'specification_key': '50', 'renewed_rent': 1, 'can_buy': 0}], 'total': 1}}
2017-11-09 16:28:07,191 TestRequest.py[line: 123] INFO: 用户模块我的衣橱曾经拥有 V12-44-429
2017-11-09 16:28:07,191 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:07,191 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:07,354 TestRequest.py[line: 166] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-436
2017-11-09 16:28:07,355 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:07,355 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [{'id': 40923, 'card_name': '轻奢年卡'}]}}
2017-11-09 16:28:07,534 TestRequest.py[line: 123] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-437
2017-11-09 16:28:07,534 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:07,534 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10004', 'message': '没有找到相应数据!'}}
2017-11-09 16:28:07,693 TestRequest.py[line: 166] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-438
2017-11-09 16:28:07,693 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:07,693 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [{'id': 40923, 'card_name': '轻奢年卡'}]}}
2017-11-09 16:28:07,850 TestRequest.py[line: 166] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-439
2017-11-09 16:28:07,850 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:07,850 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [{'id': 40923, 'card_name': '轻奢年卡'}]}}
2017-11-09 16:28:08,014 TestRequest.py[line: 166] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-440
2017-11-09 16:28:08,014 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:08,014 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [{'id': 40923, 'card_name': '轻奢年卡'}]}}
2017-11-09 16:28:08,183 TestRequest.py[line: 123] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-441
2017-11-09 16:28:08,183 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:08,183 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10004', 'message': '没有找到相应数据!'}}
2017-11-09 16:28:08,365 TestRequest.py[line: 123] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-442
2017-11-09 16:28:08,365 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:08,365 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10004', 'message': '没有找到相应数据!'}}
2017-11-09 16:28:08,532 TestRequest.py[line: 123] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-443
2017-11-09 16:28:08,532 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:08,533 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10004', 'message': '没有找到相应数据!'}}
2017-11-09 16:28:08,693 TestRequest.py[line: 123] INFO: 用户模块报错信息获取用户女神卡信息 V12-45-444
2017-11-09 16:28:08,694 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:08,694 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:08,921 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:08,921 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok', 'data': {'bonus_points': 10, 'consecutive_day': 1, 'message': '连续签到5天后即可每天获得20分'}}
2017-11-09 16:28:09,163 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:09,163 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11013', 'message': '您今日已经签过到了,请明日再来!'}}
2017-11-09 16:28:09,331 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:09,331 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:09,515 TestRequest.py[line: 166] INFO: 用户模块获取会员可用积点 V12-47-458
2017-11-09 16:28:09,515 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:09,515 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'date_dots': [{'date': 1510243200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510329600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510416000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510502400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510588800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510675200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510761600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510848000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1510934400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511020800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511107200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511193600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511280000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511366400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511452800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511539200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511625600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511712000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511798400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511884800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1511971200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512057600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512144000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512230400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512316800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512403200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512489600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512576000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512662400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512748800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512835200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1512921600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513008000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513094400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513180800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513267200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513353600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513440000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513526400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513612800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513699200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513785600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513872000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1513958400, 'dots': 1000002, 'dots_text': '99+'}, {'date': 1514044800, 'dots': 1000002, 'dots_text': '99+'}, {'date': 1514131200, 'dots': 1000002, 'dots_text': '99+'}, {'date': 1514217600, 'dots': 1000002, 'dots_text': '99+'}, {'date': 1514304000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514390400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514476800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514563200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514649600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514736000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514822400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514908800, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1514995200, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1515081600, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1515168000, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1515254400, 'dots': 1000005, 'dots_text': '99+'}, {'date': 1515340800, 'dots': 1000005, 'dots_text': '99+'}]}}
2017-11-09 16:28:09,701 TestRequest.py[line: 123] INFO: 用户模块获取会员可用积点 V12-47-459
2017-11-09 16:28:09,701 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:09,701 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10002', 'message': 'days不在有效范围'}}
2017-11-09 16:28:09,885 TestRequest.py[line: 166] INFO: 用户模块获取会员可用积点 V12-47-460
2017-11-09 16:28:09,886 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:09,886 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'date_dots': None}}
2017-11-09 16:28:10,052 TestRequest.py[line: 179] INFO: 用户模块获取会员可用积点 V12-47-461
2017-11-09 16:28:10,052 TestRequest.py[line: 180] INFO: 测试不通过
2017-11-09 16:28:10,052 TestRequest.py[line: 181] INFO: 返回的消息为：{'status': 'ok', 'data': {'date_dots': None}}
2017-11-09 16:28:10,235 TestRequest.py[line: 151] INFO: 用户模块 获取可开票金额 V12-48-468
2017-11-09 16:28:10,235 TestRequest.py[line: 152] INFO: 测试不通过
2017-11-09 16:28:10,235 TestRequest.py[line: 153] INFO: 返回的消息为：{'message': 'Call to undefined method Illuminate\\Database\\Query\\Builder::getUserInvoiceLimit()', 'status_code': 500}
2017-11-09 16:28:10,389 TestRequest.py[line: 123] INFO: 用户模块 获取可开票金额 V12-48-469
2017-11-09 16:28:10,389 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:10,390 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:10,578 TestRequest.py[line: 166] INFO: 用户模块获取我订阅的品牌V12-49-476
2017-11-09 16:28:10,579 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:10,579 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'rows': [], 'total': 0}}
2017-11-09 16:28:10,729 TestRequest.py[line: 123] INFO: 用户模块获取我订阅的品牌V12-49-477
2017-11-09 16:28:10,729 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:10,729 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:10,914 TestRequest.py[line: 166] INFO: 用户模块获取押金列表 V12-50-486
2017-11-09 16:28:10,914 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:10,915 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'total': 0, 'rows': []}}
2017-11-09 16:28:11,097 TestRequest.py[line: 166] INFO: 用户模块获取押金列表 V12-50-487
2017-11-09 16:28:11,097 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:11,098 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'total': 0, 'rows': []}}
2017-11-09 16:28:11,263 TestRequest.py[line: 123] INFO: 用户模块获取押金列表 V12-50-488
2017-11-09 16:28:11,264 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:11,264 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10002', 'message': 'type不在有效范围'}}
2017-11-09 16:28:11,433 TestRequest.py[line: 123] INFO: 用户模块获取押金列表 V12-50-489
2017-11-09 16:28:11,434 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:11,434 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:11,658 TestRequest.py[line: 166] INFO: 用户模块获取用户基本信息迭代3.102-51-494
2017-11-09 16:28:11,659 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:11,659 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'head_portrait': 'http://static-t.msparis.com/image/users/neutral.png', 'nickname': 'jim.zou', 'gender': 'm', 'dob': 619110000, 'fit_height': 178, 'id': 189152, 'bucket': 'msparis-static', 'authentication_type': 1, 'is_active': 1, 'dob_editable': 0, 'user_size': [{'id': 7, 'name': 'XXXL', 'is_selected': 0}, {'id': 6, 'name': 'XXL', 'is_selected': 0}, {'id': 5, 'name': 'XL', 'is_selected': 0}, {'id': 4, 'name': 'L', 'is_selected': 0}, {'id': 3, 'name': 'M', 'is_selected': 0}, {'id': 2, 'name': 'S', 'is_selected': 0}, {'id': 1, 'name': 'XS', 'is_selected': 1}]}}
2017-11-09 16:28:11,834 TestRequest.py[line: 123] INFO: 用户模块获取用户基本信息迭代3.102-51-495
2017-11-09 16:28:11,834 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:11,834 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:11,998 TestRequest.py[line: 83] INFO: 用户模板更新会员基本信息 V12-52-504
2017-11-09 16:28:11,999 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:11,999 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok'}
2017-11-09 16:28:12,179 TestRequest.py[line: 40] INFO: 用户模板更新会员基本信息 V12-52-505
2017-11-09 16:28:12,179 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:12,180 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:12,180 TestAllCass.py[line: 113] INFO: 结束测试
2017-11-09 16:28:12,180 TestAllCass.py[line: 117] INFO: 开始测试
2017-11-09 16:28:12,180 TestAllCass.py[line: 119] INFO: 2017-11-09-16-28-12
2017-11-09 16:28:12,340 TestRequest.py[line: 166] INFO: 活动模块获取拼团活动详情 m站4-1-4
2017-11-09 16:28:12,341 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:12,341 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'title': '2人团 | 女神派 ・ 5天时尚共享体验', 'min_number_of_members': 2, 'single_buy_price': 2990, 'sale_price': 990, 'original_price': 7900, 'team_data': None}}
2017-11-09 16:28:12,496 TestRequest.py[line: 179] INFO: 活动模块获取拼团活动详情 m站4-1-5
2017-11-09 16:28:12,497 TestRequest.py[line: 180] INFO: 测试不通过
2017-11-09 16:28:12,497 TestRequest.py[line: 181] INFO: 返回的消息为：{'status': 'ok', 'data': {'title': '2人团 | 女神派 ・ 5天时尚共享体验', 'min_number_of_members': 2, 'single_buy_price': 2990, 'sale_price': 990, 'original_price': 7900, 'team_data': None}}
2017-11-09 16:28:12,716 TestRequest.py[line: 166] INFO: 活动模块获取调查问卷基本信息4-2-14
2017-11-09 16:28:12,716 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:12,716 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'user': {'dob_editable': 0, 'dob': 619110000, 'fit_height': 178, 'fit_weight': 0}, 'body_type': [{'value': '1', 'name': '直筒型'}, {'value': '2', 'name': '梨型'}, {'value': '3', 'name': '苹果型'}, {'value': '4', 'name': '沙漏型'}, {'value': '5', 'name': '倒三角'}], 'clothing_style': [{'value': '1', 'name': '百搭'}, {'value': '2', 'name': '淑女'}, {'value': '3', 'name': '韩版'}, {'value': '4', 'name': '民族'}, {'value': '5', 'name': '欧美'}, {'value': '6', 'name': '学院'}, {'value': '7', 'name': '通勤'}, {'value': '8', 'name': '中性'}, {'value': '9', 'name': 'OL'}, {'value': '10', 'name': '简约'}], 'job': [{'value': '1', 'name': '广告/媒体/公关'}, {'value': '2', 'name': '金融投资'}, {'value': '3', 'name': '科技互联网公司'}, {'value': '4', 'name': '企业白领'}, {'value': '5', 'name': '学生'}, {'value': '6', 'name': '全职宝妈'}, {'value': '7', 'name': '教师'}, {'value': '8', 'name': '医生'}, {'value': '9', 'name': '律师'}, {'value': '10', 'name': '商人/个体户'}, {'value': '11', 'name': '事业单位/公务员'}, {'value': '12', 'name': '自由职业(艺术家/作家/摄影师/导游)'}, {'value': '13', 'name': '其他'}], 'clothing_monthly_consumption': [{'value': '1', 'name': '0-200'}, {'value': '2', 'name': '200-500'}, {'value': '3', 'name': '500-1000'}, {'value': '4', 'name': '1000-2000'}, {'value': '5', 'name': '2000-3000'}, {'value': '6', 'name': '3000以上'}], 'size': [{'value': '1', 'name': 'XS', 'is_selected': 1}, {'value': '2', 'name': 'S', 'is_selected': 0}, {'value': '3', 'name': 'M', 'is_selected': 0}, {'value': '4', 'name': 'L', 'is_selected': 0}, {'value': '5', 'name': 'XL', 'is_selected': 0}, {'value': '6', 'name': 'XXL', 'is_selected': 0}, {'value': '7', 'name': 'XXXL', 'is_selected': 0}]}}
2017-11-09 16:28:13,102 TestRequest.py[line: 83] INFO: 活动模块调查问卷基本信息提交 4-3-22
2017-11-09 16:28:13,102 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:13,103 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok', 'data': {'reward_type': 3}}
2017-11-09 16:28:13,275 TestRequest.py[line: 40] INFO: 活动模块调查问卷基本信息提交 4-3-23
2017-11-09 16:28:13,275 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:13,275 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '25001', 'message': '您已参加过该活动，感谢对女神派的支持。开启女神换衣之旅吧！'}}
2017-11-09 16:28:13,275 TestAllCass.py[line: 123] INFO: 结束测试
2017-11-09 16:28:13,275 TestAllCass.py[line: 127] INFO: 开始测试
2017-11-09 16:28:13,275 TestAllCass.py[line: 129] INFO: 2017-11-09-16-28-13
2017-11-09 16:28:13,584 TestRequest.py[line: 83] INFO: 订单模块开团 m站3-2-14
2017-11-09 16:28:13,584 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:13,585 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok', 'data': {'id': 18557, 'order_theme': '5天试穿体验续费', 'price': 990, 'cover_img': 'http://static-t.msparis.com/uploads/card/2/5/25662bb454ffe5d7b720b5e7302f010f.jpeg'}}
2017-11-09 16:28:13,768 TestRequest.py[line: 40] INFO: 订单模块开团 m站3-2-15
2017-11-09 16:28:13,768 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:13,768 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:13,940 TestRequest.py[line: 40] INFO: 订单模块参团 m站3-3-22
2017-11-09 16:28:13,940 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:13,940 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '23004', 'message': '您已是女神派尊贵的会员，无法参团，请发起开团享受活动哦！'}}
2017-11-09 16:28:14,128 TestRequest.py[line: 40] INFO: 订单模块参团 m站3-3-23
2017-11-09 16:28:14,129 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:14,129 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:14,419 TestRequest.py[line: 40] INFO: 订单模块拼团卡单次购买 V13-1-4
2017-11-09 16:28:14,419 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:14,419 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '23007', 'message': '您已是我们尊贵的用户，无法购买。现在邀请好友一起拼团，立省20元！'}}
2017-11-09 16:28:14,598 TestRequest.py[line: 40] INFO: 订单模块拼团卡单次购买 V13-1-5
2017-11-09 16:28:14,599 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:14,599 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:14,788 TestRequest.py[line: 40] INFO: 订单模块创建押金认证订单 V13-4-32
2017-11-09 16:28:14,788 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:14,788 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15026', 'message': '您已经认证过,无须认证!'}}
2017-11-09 16:28:15,042 TestRequest.py[line: 40] INFO: 订单模块创建押金认证订单 V13-4-33
2017-11-09 16:28:15,042 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:15,042 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15026', 'message': '您已经认证过,无须认证!'}}
2017-11-09 16:28:15,235 TestRequest.py[line: 40] INFO: 订单模块创建押金认证订单 V13-4-34
2017-11-09 16:28:15,235 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:15,236 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:15,421 TestRequest.py[line: 40] INFO: 订单模块创建押金认证订单 V13-4-35
2017-11-09 16:28:15,422 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:15,422 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10002', 'message': 'channel不在有效范围'}}
2017-11-09 16:28:15,643 TestRequest.py[line: 166] INFO: 订单模块选择优惠券 V13-5-40
2017-11-09 16:28:15,643 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:15,644 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'total': 15, 'rows': [{'id': 1150654, 'name': '购衣券', 'type': 3, 'use_limit': 0, 'discount': 8000, 'description': '无门槛使用', 'to_date': 1523376000, 'from_date': 1491840000, 'discount_max_price': 0, 'is_available': 1, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149862, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149863, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149864, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149865, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149866, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149867, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149868, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149869, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149870, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}], 'available_coupon_number': 1}}
2017-11-09 16:28:15,904 TestRequest.py[line: 166] INFO: 订单模块选择优惠券 V13-5-41
2017-11-09 16:28:15,904 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:15,905 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'total': 15, 'rows': [{'id': 1149872, 'name': '500元无门槛礼服租赁代金券', 'type': 3, 'use_limit': 0, 'discount': 50000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 1, 'use_range': [5], 'bind_card_type': 'NORMAL'}, {'id': 1149873, 'name': '500元无门槛礼服租赁代金券', 'type': 3, 'use_limit': 0, 'discount': 50000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 1, 'use_range': [5], 'bind_card_type': 'NORMAL'}, {'id': 1149874, 'name': '500元无门槛礼服租赁代金券', 'type': 3, 'use_limit': 0, 'discount': 50000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 1, 'use_range': [5], 'bind_card_type': 'NORMAL'}, {'id': 1149875, 'name': '500元无门槛礼服租赁代金券', 'type': 3, 'use_limit': 0, 'discount': 50000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 1, 'use_range': [5], 'bind_card_type': 'NORMAL'}, {'id': 1150654, 'name': '购衣券', 'type': 3, 'use_limit': 0, 'discount': 8000, 'description': '无门槛使用', 'to_date': 1523376000, 'from_date': 1491840000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149862, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149863, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149864, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149865, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}, {'id': 1149866, 'name': '200元无门槛购衣券', 'type': 1, 'use_limit': 20100, 'discount': 20000, 'description': '首次购卡用户专享', 'to_date': 1548864000, 'from_date': 1490976000, 'discount_max_price': 0, 'is_available': 0, 'use_range': [7], 'bind_card_type': 'NORMAL'}], 'available_coupon_number': 4}}
2017-11-09 16:28:16,079 TestRequest.py[line: 166] INFO: 订单模块租衣检测 V353-6-50
2017-11-09 16:28:16,079 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:16,079 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'order_id': 5814, 'order_no': 'M0005814', 'pay_amount': 25600, 'order_subject': '礼服美衣租赁'}}
2017-11-09 16:28:16,242 TestRequest.py[line: 123] INFO: 订单模块租衣检测 V353-6-51
2017-11-09 16:28:16,243 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:16,243 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10004', 'message': '没有找到相应数据!'}}
2017-11-09 16:28:16,446 TestRequest.py[line: 123] INFO: 订单模块租衣检测 V353-6-52
2017-11-09 16:28:16,446 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:16,447 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:17,053 TestRequest.py[line: 40] INFO: 订单模块创建女神卡升级订单 V13-7-58
2017-11-09 16:28:17,053 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:17,053 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15044', 'message': '时尚卡用户无法租赁轻奢美衣!'}}
2017-11-09 16:28:17,245 TestRequest.py[line: 40] INFO: 订单模块创建女神卡升级订单 V13-7-59
2017-11-09 16:28:17,245 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:17,245 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:17,954 TestRequest.py[line: 83] INFO: 订单模块创建女神卡续费订单 V13-8-68
2017-11-09 16:28:17,954 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:17,954 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok', 'data': {'order_id': 130901, 'order_no': 'CM15102160937097', 'is_pay': 0, 'cover_img': 'http://static-t.msparis.com/uploads/card/4/c/4c04bc123f70f9d5c121378259cb01f5.png', 'order_theme': '轻奢年卡-续费', 'total_sale': 79800399000}}
2017-11-09 16:28:18,391 TestRequest.py[line: 40] INFO: 订单模块创建女神卡续费订单 V13-8-69
2017-11-09 16:28:18,392 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:18,392 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15050', 'message': '续费失败，请联系客服人员：'}}
2017-11-09 16:28:18,577 TestRequest.py[line: 40] INFO: 订单模块创建女神卡续费订单 V13-8-70
2017-11-09 16:28:18,577 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:18,577 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '10002', 'message': 'card_id不在有效范围'}}
2017-11-09 16:28:18,765 TestRequest.py[line: 40] INFO: 订单模块创建女神卡续费订单 V13-8-71
2017-11-09 16:28:18,765 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:18,765 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:18,954 TestRequest.py[line: 40] INFO: 订单模块创建女神卡购买订单 V13-9-76
2017-11-09 16:28:18,955 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:18,955 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15080', 'message': '您已有无限换卡，请直接续费'}}
2017-11-09 16:28:19,138 TestRequest.py[line: 40] INFO: 订单模块创建女神卡购买订单 V13-9-77
2017-11-09 16:28:19,139 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:19,139 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '13003', 'message': '该商品已被下架无法被购买!'}}
2017-11-09 16:28:19,348 TestRequest.py[line: 40] INFO: 订单模块创建女神卡购买订单 V13-9-78
2017-11-09 16:28:19,348 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:19,348 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:19,569 TestRequest.py[line: 40] INFO: 订单模块创建女神卡购买订单 V3103-10-86
2017-11-09 16:28:19,569 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:19,569 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15080', 'message': '您已有无限换卡，请直接续费'}}
2017-11-09 16:28:19,755 TestRequest.py[line: 40] INFO: 订单模块创建女神卡购买订单 V3103-10-87
2017-11-09 16:28:19,755 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:19,756 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '13003', 'message': '该商品已被下架无法被购买!'}}
2017-11-09 16:28:20,016 TestRequest.py[line: 40] INFO: 订单模块创建女神卡购买订单 V3103-10-88
2017-11-09 16:28:20,017 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:20,017 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:20,233 TestRequest.py[line: 40] INFO: 订单模块支付完成 V13-11-94
2017-11-09 16:28:20,233 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:20,233 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15055', 'message': '支付失败'}}
2017-11-09 16:28:20,463 TestRequest.py[line: 40] INFO: 订单模块支付完成 V13-11-95
2017-11-09 16:28:20,463 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:20,463 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '15055', 'message': '支付失败'}}
2017-11-09 16:28:20,637 TestRequest.py[line: 40] INFO: 订单模块支付完成 V13-11-96
2017-11-09 16:28:20,637 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:20,637 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:20,858 TestRequest.py[line: 166] INFO: 订单模块用户会员卡首次下单检查 V1323-12-104
2017-11-09 16:28:20,858 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:20,858 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'is_first': False, 'first_message': '检测到当前的无限换卡未启用,该订单提交成功后,将自动启用无限换卡', 'is_use_confirm_dialog': True}}
2017-11-09 16:28:21,026 TestRequest.py[line: 123] INFO: 订单模块用户会员卡首次下单检查 V1323-12-105
2017-11-09 16:28:21,026 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:21,026 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:21,237 TestRequest.py[line: 40] INFO: 购物计划商品详情 添加衣袋商品积点 V3611-1-22
2017-11-09 16:28:21,238 TestRequest.py[line: 41] INFO: 测试通过
2017-11-09 16:28:21,238 TestRequest.py[line: 42] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '14013', 'message': '商品不存在!'}}
2017-11-09 16:28:22,849 TestRequest.py[line: 83] INFO: 购物计划商品详情 添加衣袋商品积点 V3611-1-23
2017-11-09 16:28:22,849 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:22,850 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok', 'data': {'is_disabled': False, 'is_not_enough_dots': False, 'not_enough_message': '美衣件数已超衣袋上限，可将部分美衣删除或移入心愿单后再预定', 'is_valid': True, 'is_full': False, 'no_stock': False, 'product_exist': True, 'plan_id': 279641, 'delivery_region': '310101', 'delivery_region_name': '黄浦区', 'delivery_date': 1512748800, 'send_back_date': 1513094400, 'can_use_dots': 1000002, 'free_rental_count': 500000, 'pay_rental_count': 333334, 'is_pay_grid': False, 'pay_mode': 'free', 'go_chose': True, 'have_invalid_product': False, 'items': [{'plan_item_id': 500914, 'product_id': 7530, 'name': '轻奢淑女蕾丝连衣裙', 'brand': 'BADGLEY MISCHKA', 'specification': '美码', 'dots': 3, 'images': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'spu': 'BM054B', 'is_valid': True}], 'min_cost_dots': 3, 'items_count': 1, 'product_cost_dots': 3, 'price': {'original_total': 0, 'pay_dots_price': 0, 'pay_dots_num': 0, 'pay_dots_grid': 0, 'deposit': 0, 'express': 0, 'total': 0}, 'max_rental_count': 833335}}
2017-11-09 16:28:28,954 TestRequest.py[line: 83] INFO: 订单模块创建日常租赁订单积点付费 V33-13-112
2017-11-09 16:28:28,955 TestRequest.py[line: 84] INFO: 测试通过
2017-11-09 16:28:28,955 TestRequest.py[line: 85] INFO: 返回的消息是：{'status': 'ok', 'data': {'order_id': 883047, 'order_no': 'PM15102160993389', 'is_need_pay': False, 'order_subject': '常服美衣租赁', 'pay_amount': 0}}
2017-11-09 16:28:29,014 mydb.py[line: 96] INFO: query：select `order`.id orderid,order_split.id ordersplitid,order_split_item.id  ordersplititemid from  `order`,order_split,order_split_item  where `order`.id=order_split.m_order_id and order_split.id=order_split_item.split_order_id and `order`.id = %s  data：883047
2017-11-09 16:28:29,268 TestRequest.py[line: 166] INFO: 用户模块订单详情 迭代3102-42-400
2017-11-09 16:28:29,269 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:29,269 TestRequest.py[line: 168] INFO: 返回的消息是：{'status': 'ok', 'data': {'id': 883047, 'type': 2, 'order_no': 'PM15102160993389', 'status': 2, 'delivery_date': 1512748800, 'return_date': 1513094400, 'amount_price': 0, 'amount_deposit': 0, 'amount_shipping': 0, 'membership_discount_price': 0, 'total_sale': 0, 'discount_price': 0, 'cancel_reason': None, 'shipping_name': '邹苏玉', 'shipping_region_name': '上海 上海市 黄浦区', 'shipping_address': '九江路501', 'shipping_mobile': '13585949577', 'created_at': 1510216099, 'remark': '配送前来电确认', 'finish_at': None, 'zhima_order_no': None, 'pay_dots_price': 0, 'pay_dots_type': 1, 'shipping_company': 1, 'is_comment': 2, 'pay_method': None, 'pay_dots_origin_price': 0, 'pay_dots_discount_price': 0, 'pay_dots_num': 0, 'remaining_payment_time': 0, 'can_return': 0, 'show_logistics': 0, 'order_status': '已支付', 'split_order_id': 881002, 'order_detail': [{'name': '轻奢淑女蕾丝连衣裙', 'image_url': 'http://static-t.msparis.com/uploads/products/2/5/25a848439649581a2a5afc7258efb5cc.jpg', 'brand_name': 'BADGLEY MISCHKA', 'product_mode_id': 1, 'product_max_rental_days': 0, 'specification': '美码M', 'price': 0, 'product_dots': 3, 'status': 0, 'type': 2, 'id': 7530, 'specification_key': '50', 'product_limit_tag': '', 'product_spu': 'BM054B', 'split_order_item_id': 435501, 'renewed_rent': 0, 'can_buy': 0, 'in_hand': 0, 'sale_price': 205800, 'base_discount': 100, 'market_price': 686000}]}}
2017-11-09 16:28:29,436 TestRequest.py[line: 123] INFO: 用户模块订单详情 迭代3102-42-401
2017-11-09 16:28:29,436 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:29,436 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:30,480 TestRequest.py[line: 230] INFO: 订单模块租赁购买订单取消 V13-14-122
2017-11-09 16:28:30,480 TestRequest.py[line: 231] INFO: 测试通过
2017-11-09 16:28:30,480 TestRequest.py[line: 232] INFO: 返回的消息是：{'status': 'ok'}
2017-11-09 16:28:30,990 TestRequest.py[line: 166] INFO: 订单模块续费套餐页面 V343-15-130
2017-11-09 16:28:30,990 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:31,189 TestRequest.py[line: 123] INFO: 订单模块续费套餐页面 V343-15-131
2017-11-09 16:28:31,190 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:31,190 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:31,645 TestRequest.py[line: 166] INFO: 订单模块续费确认页面 V343-16-138
2017-11-09 16:28:31,646 TestRequest.py[line: 167] INFO: 测试通过
2017-11-09 16:28:31,827 TestRequest.py[line: 123] INFO: 订单模块续费确认页面 V343-16-139
2017-11-09 16:28:31,828 TestRequest.py[line: 124] INFO: 测试通过
2017-11-09 16:28:31,828 TestRequest.py[line: 125] INFO: 返回的消息是：{'status': 'error', 'error': {'code': '11008', 'message': '用户TOKEN不存在或已超时!'}}
2017-11-09 16:28:32,228 TestRequest.py[line: 166] INFO: 订单模块 获取会员配送地址V13-17-146
2017-11-09 16:28:32,229 TestRequest.py[line: 167] INFO: 测试通过
